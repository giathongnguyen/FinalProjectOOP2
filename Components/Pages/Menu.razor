@page "/menu"
@inject IServiceProvider ServiceProvider
@using MySqlConnector

<a href="/"><img style="width: 100px;" src="restaurant_logo.jpg" alt="restaurant logo" /></a>
<style>
    .menu-page {
        padding: 20px;
    }

    .menu-item {
        border-bottom: 1px solid #ddd;
        padding: 10px 0;
    }

    .menu-item-description {
        font-style: italic;
        color: #555;
    }

    .add-to-cart-btn {
        background-color: #28a745;
        color: white;
        border: none;
        padding: 5px 10px;
        cursor: pointer;
        font-size: 0.9em;
    }

        .add-to-cart-btn:hover {
            background-color: #218838;
        }

    .success-message {
        margin-top: 20px;
        color: #28a745;
        font-weight: bold;
    }

    .cart-table {
        margin-top: 20px;
        width: 100%;
        border-collapse: collapse;
    }

        .cart-table th, .cart-table td {
            border: 1px solid #ddd;
            padding: 8px;
        }

        .cart-table th {
            background-color: #f2f2f2;
        }
</style>

<div class="menu-page">
    <h1>Menu</h1>

    <ul>
        @foreach (var item in MenuItems)
        {
            <li class="menu-item">
                <strong>@item.Name</strong> - @item.Price.ToString("C")
                <p class="menu-item-description">@item.Description</p>
                <button class="add-to-cart-btn" @onclick="() => AddToCart(item.Id)">Add to Cart</button>
            </li>
        }
    </ul>

    @if (ItemAddedToCart)
    {
        <div class="success-message">Item has been added to cart successfully!</div>

        <table class="cart-table">
            <thead>
                <tr>
                    <th>Item Name</th>
                    <th>Price</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in CartItems)
                {
                    <tr>
                        <td>@item.Name</td>
                        <td>@item.Price.ToString("C")</td>
                    </tr>
                }
            </tbody>
        </table>
    }
</div>

@code {
    private List<MenuItem> MenuItems { get; set; } = new List<MenuItem>();
    private List<MenuItem> CartItems { get; set; } = new List<MenuItem>();
    private bool ItemAddedToCart { get; set; } = false;
    private string connectionString = "server=127.0.0.1;user=root;password=password;database=restaurant";

    protected override async Task OnInitializedAsync()
    {
        try
        {
            using var dbConnection = new MySqlConnection(connectionString);
            await dbConnection.OpenAsync();
            await LoadMenuItems(dbConnection);
        }
        catch (MySqlException ex)
        {
            Console.Error.WriteLine($"Database error: {ex.Message}");
        }
        catch (Exception ex)
        {
            Console.Error.WriteLine($"An error occurred: {ex.Message}");
        }
    }

    private async Task LoadMenuItems(MySqlConnection dbConnection)
    {
        try
        {
            var command = new MySqlCommand("SELECT Id, Name, Description, Price FROM MenuItems", dbConnection);
            await using var reader = await command.ExecuteReaderAsync();

            while (await reader.ReadAsync())
            {
                MenuItems.Add(new MenuItem
                    {
                        Id = reader.GetInt32("Id"),
                        Name = reader.GetString("Name"),
                        Description = reader.GetString("Description"),
                        Price = reader.GetDecimal("Price")
                    });
            }
        }
        catch (MySqlException ex)
        {
            Console.Error.WriteLine($"Database error: {ex.Message}");
        }
        catch (Exception ex)
        {
            Console.Error.WriteLine($"An error occurred: {ex.Message}");
        }
    }

    private async Task AddToCart(int itemId)
    {
        try
        {
            var item = MenuItems.FirstOrDefault(i => i.Id == itemId);
            if (item != null)
            {
                CartItems.Add(item);
                ItemAddedToCart = true;

                using var dbConnection = new MySqlConnection(connectionString);
                await dbConnection.OpenAsync();

                var command = new MySqlCommand("INSERT INTO CartItems (MenuItemId, Quantity) VALUES (@MenuItemId, @Quantity)", dbConnection);
                command.Parameters.AddWithValue("@MenuItemId", item.Id);
                command.Parameters.AddWithValue("@Quantity", 1);

                await command.ExecuteNonQueryAsync();
            }
        }
        catch (MySqlException ex)
        {
            Console.Error.WriteLine($"Database error: {ex.Message}");
        }
        catch (Exception ex)
        {
            Console.Error.WriteLine($"An error occurred: {ex.Message}");
        }
    }

    private class MenuItem
    {
        public int Id { get; set; }
        public string Name { get; set; }
        public string Description { get; set; }
        public decimal Price { get; set; }
    }
}